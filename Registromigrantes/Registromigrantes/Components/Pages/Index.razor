@page "/"
@inject HttpClient Http

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3>RegistroMigrantes</h3>
    <a href="/login" class="btn btn-outline-primary">Iniciar Sesión</a>
</div>

<form>
    <div class="form-group">
        <label for="Nombre">Nombre(s)</label>
        <input type="text" class="form-control" id="Nombre" />
        <label for="Apellidos">Apellidos</label>
        <input type="text" class="form-control" id="Apellidos" />

        <label for="Edad">Edad</label>
        <input type="number" class="form-control" id="Apellidos" />

        <label for="Direccion">Direccion</label>
        <input type="text" class="form-control" id="Dirección" />
        <label for="Telefono">Teléfono</label>
        <input type="number" class="form-control" id="Telefono" />
        <label for="Correo">Correo</label>
        <input type="email" class="form-control" id="Correo" />
        <label for="Procedencia">Lugar de procendica</label>
        <input type="text" class="form-control" id="Procedencia" />
        <label for="Dedicaba">¿A qué se dedicaba?</label>
        <input type="text" class="form-control" id="Dedeicaba" />
        <label for="Hablidades">¿A qué le gustaría dedicarse?</label>
        <input type="text" class="form-control" id="Habilidades" />

    </div>
    <div class="form-group">
        <label for="Observaciones">Observaciones</label>
        <textarea class="form-control" id="Observaciones" rows="3"></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>
<p>
    @ConexionFormulario
</p>
<p>
    @ConexionServidor
</p>
@code {
    string ConexionServidor = "En espera";
    string ConexionFormulario = "En espera";
    async Task ProbarConexion()
    {
        var respuesta = await Http.GetStringAsync("https://localhost:44377/api/Formulario/ConexionServidor");
        var respuestaFormulario = await Http.GetStringAsync("https://localhost:44377/api/Formulario/ConexionFormulario");

        ConexionServidor = respuesta;
        ConexionFormulario = respuestaFormulario;
    }
    protected override async Task OnInitializedAsync()
    {
        await ProbarConexion();
    }
}